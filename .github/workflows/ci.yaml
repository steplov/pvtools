name: CI

on:
  push:
    branches: ["**"]
    tags: ["v*"]
  pull_request:
  workflow_dispatch:

jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: dtolnay/rust-toolchain@stable
        with:
          components: clippy, rustfmt
      - run: cargo fmt --all --check
      - run: cargo clippy --all-targets --all-features -- -D warnings
      - uses: EmbarkStudios/cargo-deny-action@v1
        with:
          command: check

  test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: dtolnay/rust-toolchain@stable
      - run: cargo test --all-features --all-targets

  build-release:
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/')
    needs: [lint, test]
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - uses: dtolnay/rust-toolchain@stable
        with:
          targets: x86_64-unknown-linux-musl
      - run: sudo apt-get update && sudo apt-get install -y musl-tools jq

      # Extract tag version
      - id: tag_version
        run: echo "tag=${GITHUB_REF#refs/tags/v}" >> $GITHUB_OUTPUT

      - name: Set Cargo version from tag (no commit)
        run: |
          tag="${{ steps.tag_version.outputs.tag }}"
          sed -i "s/^version = \".*\"/version = \"${tag}\"/" Cargo.toml

      # Build
      - run: cargo build --release --target x86_64-unknown-linux-musl

      # Prepare release dir
      - name: Prepare release artifacts
        run: |
          mkdir release
          cp target/x86_64-unknown-linux-musl/release/pvtools release/pvtools-linux-x86_64
          cp examples/config.example.toml release/

      # Create tar.gz
      - name: Create archive
        run: tar -czf pvtools-${{ steps.tag_version.outputs.tag }}-linux-x86_64.tar.gz -C release .

      # Upload to GitHub Release
      - name: Release
        uses: softprops/action-gh-release@v1
        with:
          name: "pvtools ${{ steps.tag_version.outputs.tag }}"
          tag_name: v${{ steps.tag_version.outputs.tag }}
          prerelease: ${{ contains(steps.tag_version.outputs.tag, '-') }}
          files: pvtools-${{ steps.tag_version.outputs.tag }}-linux-x86_64.tar.gz
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
